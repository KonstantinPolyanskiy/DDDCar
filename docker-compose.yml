services:
  keycloak-db:
    image: postgres:16
    container_name: car_service_keycloak_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
  
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.2
    container_name: car_service_keycloak
    restart: unless-stopped
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_PROXY: edge
      KC_HTTP_ENABLED: "true"
    ports:
      - "8081:8080"
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs http://localhost:8081/health/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

    depends_on:
      keycloak-db:
        condition: service_healthy     
        
  auth:
    build:
      context: .
      dockerfile: DDDCar.Auth/Dockerfile
    container_name: car_service_auth
    restart: unless-stopped
    ports: 
      - "5000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      KeycloakSettings__BaseUrl: "http://localhost:5000/"
      KeycloakSettings_Realm: "TestRealm"
      KeycloakSettings_Audience: "TestAudience"
    depends_on:
      keycloak:
        condition: service_healthy
    
    

volumes:
  keycloak_pgdata: